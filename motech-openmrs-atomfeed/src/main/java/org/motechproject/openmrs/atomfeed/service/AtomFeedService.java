package org.motechproject.openmrs.atomfeed.service;

import org.motechproject.MotechException;
import org.motechproject.openmrs.atomfeed.events.EventDataKeys;

/**
 * AtomFeedClient allow users to fetch an atom provided by the OpenMRS Atom Feed
 * module If the atom feed contains new entries, corresponding events will be
 * raised in the Motech server that correspond to those actions.
 * 
 * Clients interested in listening for events should see {@link EventDataKeys}
 * for a full description of possible events that may be generated by the Atom
 * Feed.
 */
public interface AtomFeedService {

    /**
     * Fetches the Atom Feed from the OpenMRS
     * 
     * @param sinceLastUpdate
     *            true if you want to fetch only since the last time this
     *            service was run, false if you want the entire OpenMRS feed to
     *            be processed
     * @throws MotechException If there was a problem fetching the openmrs atom feed
     */
    void fetchNewOpenMrsEvents(boolean sinceLastUpdate);

    void fetchOpenMrsChangesSinceLastUpdate();

}
